{"version":3,"sources":["../../src/query_part.js"],"names":["functionRenderer","suffixRenderer","identityRenderer","quotedIdentityRenderer","QueryPartDef","options","type","params","defaultParams","renderer","category","addStrategy","QueryPart","part","def","message","_","clone","updateText","innerExpr","strValue","index","indexOf","optional","hasMultipleParamsInString","each","split","partVal","idx","updateParam","trim","splice","length","text","join","str","parameters","map","value","paramType","quote","unshift"],"mappings":"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","file":"query_part.js","sourcesContent":["import _ from 'lodash';\n\nexport class QueryPartDef {\n\n  constructor(options) {\n    this.type = options.type;\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n    this.renderer = options.renderer;\n    this.category = options.category;\n    this.addStrategy = options.addStrategy;\n  }\n}\n\nexport class QueryPart {\n\n  constructor(part, def) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find query part ' + part.type };\n    }\n\n    part.params = part.params || _.clone(this.def.defaultParams);\n    this.params = part.params;\n    this.updateText();\n  }\n\n  render(innerExpr) {\n    return this.def.renderer(this, innerExpr);\n  }\n\n  hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this.hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.type + '()';\n      return;\n    }\n\n    let text = this.def.type + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function functionRenderer(part, innerExpr) {\n  const str = part.def.type + '(';\n  const parameters = _.map(part.params, (value, index) => {\n    const paramType = part.def.params[index];\n    if (paramType.type === 'time') {\n      if (value === 'auto') {\n        value = '$__interval';\n      }\n    }\n    if (paramType.quote === 'single') {\n      return \"'\" + value + \"'\";\n    } else if (paramType.quote === 'double') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n\n  if (innerExpr) {\n    parameters.unshift(innerExpr);\n  }\n  return str + parameters.join(', ') + ')';\n}\n\nexport function suffixRenderer(part, innerExpr) {\n  return innerExpr + ' ' + part.params[0];\n}\n\nexport function identityRenderer(part, innerExpr) {\n  return part.params[0];\n}\n\nexport function quotedIdentityRenderer(part, innerExpr) {\n  return '\"' + part.params[0] + '\"';\n}"]}